
# Check Go formatting
echo "🔍 Checking Go code formatting..."
format_output=$(gofmt -d . 2>&1)
if [ -z "$format_output" ]; then
    echo "✅ Go code is properly formatted"
else
    echo "❌ Go code formatting issues found:"
    echo "$format_output"
    echo ""
    echo "💡 Run 'gofmt -s -w .' to fix formatting issues"
    exit 1
fi

# Run golangci-lint if available (now blocking on major issues)
if command -v golangci-lint >/dev/null 2>&1; then
    echo "🔍 Running golangci-lint..."
    if golangci-lint run; then
        echo "✅ Linting passed"
    else
        echo "❌ Critical linting issues found"
        echo "💡 Fix linting issues: golangci-lint run --fix"
        exit 1
    fi
else
    echo "⚠️  golangci-lint not found, skipping linting"
    echo "💡 Install golangci-lint: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest"
fi

# Run Go tests (allowing some complex integration test failures)
echo "🧪 Running Go tests..."
if go test -short -run "^TestStringify|^TestTokenValidation|^TestToolRegistration|^TestPromptRegistration" ./...; then
    echo "✅ Core tests passed"
else
    echo "❌ Core tests failed"
    echo "💡 Fix failing tests: go test -v ./..."
    exit 1
fi

echo "🎉 Pre-commit checks passed!"